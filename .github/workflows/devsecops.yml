name: CI/CD Pipeline
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    # Добавляем переменные окружения для тестов
    env:
      NODE_ENV: test
      PORT: 5000
      JWT_SECRET: ci_test_secret_key
      # Не нужно указывать MONGODB_URI - будет использовать MongoDB Memory Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Install dependencies
        run: npm ci || npm install

      # Создаем .env файл для тестов
      - name: Create .env file
        run: |
          echo "NODE_ENV=test" >> .env
          echo "PORT=5000" >> .env
          echo "JWT_SECRET=ci_test_secret_key" >> .env
          # MONGODB_URI не указываем - будет использовать MongoDB Memory Server

      - name: Run tests
        run: npm test

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build
        run: npm run build