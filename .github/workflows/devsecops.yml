name: CI/CD Pipeline
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    # Добавляем переменные окружения для тестов
    env:
      PORT: 3000
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: test_db
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      API_KEY: ${{ secrets.API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Install dependencies
        run: npm ci || npm install

      # Создаем .env файл для тестов
      - name: Create .env file
        run: |
          echo "PORT=${PORT}" >> .env
          echo "NODE_ENV=${NODE_ENV}" >> .env
          echo "DB_HOST=${DB_HOST}" >> .env
          echo "DB_PORT=${DB_PORT}" >> .env
          echo "DB_NAME=${DB_NAME}" >> .env
          echo "DB_USER=${DB_USER}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
          echo "JWT_SECRET=${JWT_SECRET}" >> .env
          echo "API_KEY=${API_KEY}" >> .env

      - name: Run tests
        run: npm test

  # Остальная часть файла осталась без изменений
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build
        run: npm run build